        -:    0:Source:/home/gongxc/CLionProjects/misysTest/src/handlePath.cpp
        -:    0:Graph:/home/gongxc/CLionProjects/misysTest/cmake-build-debug/CMakeFiles/misysTest.dir/src/handlePath.cpp.gcno
        -:    0:Data:/home/gongxc/CLionProjects/misysTest/cmake-build-debug/CMakeFiles/misysTest.dir/src/handlePath.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by gongxc on 2021/12/10.
        -:    3://
        -:    4:#include "handlePath.h"
        -:    5:#define FILE_MODE_V2 (0755)
        -:    6:
        -:    7:using std::string;
        1:    8:const std::string slash = "/";
        1:    8-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    8-block  1
call    4 returned 1
call    5 returned 1
    %%%%%:    8-block  2
call    6 never executed
        -:    9:
        -:   10:
function _ZN10handlePath6handleERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 3 returned 100% blocks executed 79%
        3:   11:int handlePath::handle(const string& file_name, string pathFinal) {
        3:   11-block  0
        6:   12:    string pathTemp;
        3:   12-block  0
call    0 returned 3
call    1 returned 3
        3:   12-block  1
    %%%%%:   12-block  2
call    2 never executed
        3:   13:    int length = 0;
        -:   14:
        -:   15:
        3:   16:    pathTemp.append(file_name);
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        6:   17:    string subStr = pathTemp.substr(0, 1);
        3:   17-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   17-block  1
call    3 returned 3
    %%%%%:   17-block  2
call    4 never executed
        -:   18:
        3:   19:    if (!strncmp(subStr.c_str(), slash.c_str(), 1)) {
        3:   19-block  0
call    0 returned 3
call    1 returned 3
branch  2 taken 1 (fallthrough)
branch  3 taken 2
        1:   20:        printf("文件的第一个字符是/");
        1:   20-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   21:        return -1;
        1:   21-block  0
        -:   22:    }
        -:   23:
        2:   24:    length = pathFinal.length();
        2:   24-block  0
call    0 returned 2
        -:   25:
        2:   26:    subStr = pathFinal.substr(length-1, 1);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   26-block  0
call    3 returned 2
call    4 returned 2
        -:   27:
        2:   28:    if (!strncmp(subStr.c_str(), slash.c_str(), 1)) {
call    0 returned 2
call    1 returned 2
branch  2 taken 0 (fallthrough)
branch  3 taken 2
    #####:   29:        pathFinal.append(file_name);
    $$$$$:   29-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   29-block  1
        -:   30:    } else {
        2:   31:        pathFinal.append(slash);
        2:   31-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   32:        pathFinal.append(file_name);
        2:   32-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   33:
        -:   34:    }
        2:   35:    return 0;
        2:   35-block  0
        -:   36:}
        -:   37:
        -:   38:
        -:   39:
        -:   40:
function _ZN10handlePath12CreateFolderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ called 4 returned 100% blocks executed 83%
        4:   41:int handlePath::CreateFolder(const string &path,const string& folder_name ){
        4:   41-block  0
        8:   42:    string pathFinal;
        4:   42-block  0
call    0 returned 4
        4:   42-block  1
call    1 returned 4
        4:   42-block  2
    %%%%%:   42-block  3
call    2 never executed
        4:   43:    int ret = 11;
        4:   44:    int value = -1;
        4:   45:    if (path.empty() || folder_name.empty()) {
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0
        4:   45-block  0
call    3 returned 4
branch  4 taken 1 (fallthrough)
branch  5 taken 3
        1:   45-block  1
        3:   45-block  2
        4:   45-block  3
branch  6 taken 1 (fallthrough)
branch  7 taken 3
        1:   46:        printf("文件或者目录为空");
        1:   46-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   47:        return value;
        1:   47-block  0
        -:   48:    }
        3:   49:    pathFinal.append(path);
        3:   49-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   50:    value = handle(folder_name, pathFinal);
        3:   50-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   50-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   50-block  2
call    6 returned 3
    %%%%%:   50-block  3
call    7 never executed
    %%%%%:   50-block  4
        3:   51:    if (value) {
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        1:   52:        printf("handle返回值非0");
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53:        return ret;
        1:   53-block  0
        -:   54:    }
        -:   55:
        2:   56:    if (access(pathFinal.c_str(), F_OK) != 0) {
        2:   56-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 1 (fallthrough)
branch  3 taken 1
        -:   57:        //路径不存在
        1:   58:        value = mkdir(pathFinal.c_str() ,FILE_MODE_V2);
        1:   58-block  0
call    0 returned 1
call    1 returned 1
        1:   59:        if (value == 0) {
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   60:            printf("创建成功");
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61:            ret = 12;
        1:   61-block  0
        -:   62:        } else {
    #####:   63:            printf("创建失败");
    $$$$$:   63-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        1:   64:            ret = 13;
    $$$$$:   64-block  0
        1:   64-block  1
        -:   65:        }
        -:   66:    } else {
        1:   67:        printf("路径已存在");
        1:   67-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   68:        ret = 14;
        1:   68-block  0
        -:   69:    }
        -:   70:
        2:   71:    return ret;
        2:   71-block  0
function _GLOBAL__sub_I__ZN10handlePath6handleERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 80%
        4:   72:}
        1:   72-block  0
        1:   72-block  1
call    0 returned 1
        1:   72-block  2
        1:   72-block  3
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   72-block  4
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        1:   72-block  5
        -:   73:
